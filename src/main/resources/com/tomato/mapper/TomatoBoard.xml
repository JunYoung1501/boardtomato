<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <!-- 게시글 SQL -->
<mapper namespace="com.tomato.mapper.board">

	<!-- 게시글 저장(삽입) -->
	<insert id="insertBoard" parameterType="com.tomato.board.boardvo.BoardVO">
		INSERT INTO BOARD VALUES(
		#{boardNum},
		#{boardId},
		#{boardTitle},
		#{boardContent},
		<if test='boardOriginalFile == null'>
		<![CDATA[' ',]]>
		</if>
		<if test='boardOriginalFile != null'>
		#{boardOriginalFile},
		</if>
		<if test='boardFile == null'>
		<![CDATA[' ',]]>
		</if>
		<if test='boardFile != null'>
		#{boardFile},
		</if>
		#{boardReRef},
		#{boardReLev},
		<if test='boardReRef == 0'> <!-- 원글일 경우  -->
		#{boardReSeq},
		</if>
		<if test='boardReRef != 0'><!-- 댓글일 경우 -->
			(SELECT NVL((SELECT MAX(board_Re_Seq)+1
						FROM board
						WHERE board_Re_Ref =#{boardReRef}),0) FROM dual),
		</if>
		#{boardReadCount},
		sysdate
		)
	</insert>
		
	<!-- 가장 최근의 게시판 시퀀스값 조회 -->	
	<select id="getBoardNumByLastSeq" resultType="int">
		SELECT board_seq.nextval FROM dual
	</select>

	<!-- 전체 게시판 조회 (게시판 번호)-->
	<select id="isBoard" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM BOARD WHERE board_Num = #{boardNum}
	</select>
	
	<!-- 게시판  내용 조회(ex) id 게시자 제목 ...etc) -->	
	<select id="getBoardlist" parameterType="int" resultType="com.tomato.board.boardvo.BoardVO">
		SELECT  
				BOARD_ID AS "boardId",
				BOARD_NUM AS "boardNum",
	            BOARD_TITLE AS "boardTitle",
	            BOARD_CONTENT AS "boardContent",
	            BOARD_ORIGINAL_FILE AS "boardOriginalFile",
	            BOARD_FILE AS "boardFile",
	            BOARD_RE_REF AS "boardReRef",
	            BOARD_RE_LEV AS "boardReLev",
	            BOARD_RE_SEQ AS "boardReSeq",
	            BOARD_READCOUNT AS "boardReadCount",
	            BOARD_DATE AS "boardDate"
        FROM BOARD WHERE board_Num = #{boardNum}
	</select>
	
	<!--  게시판 수정 댓글 x  -->
	<update id="updateBoard" parameterType="com.tomato.board.boardvo.BoardVO">
		UPDATE BOARD SET
			board_title = #{boardTitle},
			board_content = #{boardContent},
			board_Original_File = #{boardOriginalFile},
			board_File = #{boardFile},
			board_Date = sysdate
		WHERE board_num=#{boardNum}
	</update>
	
	<!-- 게시판 댓글 수정 -->
	<update id="updateBoardRe" parameterType="com.tomato.board.boardvo.BoardVO">
		UPDATE  BOARD SET
			board_title = #{boardTitle},
			board_content = #{boardContent},
			board_Date = sysdate
		WHERE board_num=#{boardNum}
	</update>
	
	<!-- 게시판 조회수 수정 -->
	<update id="updateBoardReadCount" parameterType="int">
		UPDATE BOARD SET
			board_readcount = (SELECT board_readcount+1 FROM BOARD 
			WHERE board_num = #{boardNum}) 
		WHERE board_num = #{boardNum} 
	</update>
	
	
	<!-- 게시글 삭제  -->
	<delete id="deleteBoard" parameterType="int">
		DELETE BOARD WHERE board_num=#{boardNum}
	</delete>
	
	<!-- 개별 게시글/댓글  모두 삭제 -->
<!-- 	<delete id="deleteOriginalReplyBoards" parameterType="int">
		DELETE BOARD WHERE board_num = #{boardNum} OR board_Re_ref = #{boardNum}
	</delete>
	 -->
	
	<!-- 전체 게시글 조회시 댓글 유무 점검  -->
	<select id="getListCount" parameterType="String" resultType="int">
	 	SELECT COUNT(*) FROM BOARD 
		<if test="isReplyContain == 'true'">
		WHERE BOARD_RE_LEV  <![CDATA[ > ]]>  0 
		</if>
	</select>
	
	<!--게시판 페이징  원글만 추출 -->
	<select id="boardPaging" parameterType="hashmap" resultType="com.tomato.board.boardvo.BoardVO" >
		SELECT n.board_num as boardNum,
		    n.board_id as boardId,
		    n.board_title as boardTitle,
		    n.board_content as boardContent,
		    n.board_original_file as boardOriginalFile,
		    n.board_file as boardFile,
		    n.board_re_ref as boardReRef,
		    n.board_re_lev as boardReLev,
		    n.board_re_seq as boardReSeq,
		    n.board_readcount as boardRecount,
		    n.board_date as boardDate
		FROM
		    (SELECT m.*,  
		     FLOOR((ROWNUM - 1) / #{limit} + 1) page  
		     FROM (
		            SELECT * FROM BOARD
		            WHERE board.BOARD_RE_LEV = 0
		            ORDER BY board.board_num DESC
		          ) m  
		    )  n
		WHERE page =#{page}
	</select>
		
	<!-- 페이지 적용 검색 글 조회 -->
	<select id="selectBoardsSearch" parameterType="hashmap" resultType="com.tomato.board.boardvo.BoardVO" >
		SELECT  
			n.board_num as boardNum,
			n.board_id as boardId,
		    n.board_title as boardTitle,
		    n.board_content as boardContent,
		    n.board_original_file as boardOriginalFile,
		    n.board_file as boardFile,
		    n.board_re_ref as boardReRef,
		    n.board_re_lev as boardReLev,
		    n.board_re_seq as boardReSeq,
		    n.board_readcount as boardRecount,
		    n.board_date as boardDate
		FROM
			    (SELECT m.*,  
			     FLOOR((ROWNUM - 1) / #{limit} + 1) page  
			     FROM (
			            SELECT * FROM BOARD
			            WHERE
			            <if test="isReplyContain == 'false'">
			            	board_Re_Ref = 0
			            </if>
			            <if test="isReplyContain == 'true'">
			            	board_Re_Ref > 0
			            </if>
			            <if test="searchKey != null and searchWord != null">
					 		AND ${searchKey} LIKE '%' || #{searchWord} || '%'
					 	</if>
					 	<if test="orderKey != null">
		             		ORDER BY ${orderKey} ${orderDirection}
		             	</if>
			          ) m  
			    )  n
			WHERE page =#{page}
	</select>
	
	<!-- 게시글 검색 수  -->
	<select id="selectCountBoardsSearch" parameterType="hashmap" resultType="int" >
		SELECT   COUNT(*)
		FROM 
		    (SELECT m.*  
		     FROM (
		            SELECT * FROM BOARD
		            where
		            <if test="isReplyContain =='false'">
		            	board_Re_Ref = 0
		            </if>
		            <if test="isReplyContain =='true'">
		            	board_Re_Ref <![CDATA[ > ]]> 0
		            </if>
		            <if test="searchKey != '' and searchWord != ''">
				 		AND ${searchKey} LIKE '%' || #{searchWord} || '%'
				 	</if>
				 	<if test="orderKey != '' ">
	             		ORDER BY ${orderKey} ${orderDirection}
	             	</if>
		          ) m  
		    )  n
	</select>
	
	
	<!-- 원글의 모든 댓글 가져오기  -->
	<select  id ="boardReplySelect" parameterType="int" resultType="com.tomato.board.boardvo.BoardVO">
		SELECT 
				BOARD_ID AS "boardId",
				BOARD_NUM AS "boardNum",
	            BOARD_TITLE AS "boardTitle",
	            BOARD_CONTENT AS "boardContent",
	            BOARD_ORIGINAL_FILE AS "boardOriginalFile",
	            BOARD_FILE AS "boardFile",
	            BOARD_RE_REF AS "boardReRef",
	            BOARD_RE_LEV AS "boardReLev",
	            BOARD_RE_SEQ AS "boardReSeq",
	            BOARD_READCOUNT AS "boardReadCount",
	            BOARD_DATE AS "boardDate"
		FROM BOARD 
		WHERE BOARD_RE_REF = #{boardReRef} AND BOARD_RE_LEV  <![CDATA[ > ]]> 0
	</select>
	
	<!-- 게시글 내용중 삽입 이미지 삭제  -->
	<delete id="deleteContentImg" parameterType="int">
		DELETE UPLOADFILE WHERE id = #{id}
	</delete>
	
</mapper>